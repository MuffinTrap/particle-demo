#include "drawtext.h"
#include <stdlib.h>
#include <GL/opengx.h>

void PrintfGX(gdl::FFont* font, short x, short y, float scale, u32 col, const char* format, ... )
{
	va_list args;
	char	buff[256];

	va_start(args, format);
	vsprintf(buff, format, args);
	va_end(args);
	/*

	float	tx;
	int		c,tc;
	Mtx		TempMatrix;
	GXColor	TempCol;


	if (vList == NULL)
		return;


	if ((x == gdl::Centered) || (x == gdl::PCentered)) {
		tx = gdl::ScreenCenterX - ((((cw+1)*strlen(text))*scale)/2)+(scale/2);
	} else {
		tx = x;
	}

	TempCol.r = RED(col);
	TempCol.g = GREEN(col);
	TempCol.b = BLUE(col);
	TempCol.a = ALPHA(col);


	GX_LoadTexObj(charTexObj, GX_TEXMAP0);
	GX_SetTevOp(GX_TEVSTAGE0, GX_MODULATE);

	GX_ClearVtxDesc();
	GX_SetVtxDesc(GX_VA_POS, GX_INDEX8);
	GX_SetVtxDesc(GX_VA_TEX0, GX_INDEX16);

	GX_SetArray(GX_VA_POS, vList, 2*sizeof(s16));
	GX_SetArray(GX_VA_TEX0, tList, 2*sizeof(f32));


	guMtxCopy(gdl::wii::ModelMtx, TempMatrix);
	guMtxApplyTrans(TempMatrix, TempMatrix, tx, y, 0);
	guMtxApplyScale(TempMatrix, TempMatrix, scale, scale, 0);
	GX_LoadPosMtxImm(TempMatrix, GX_PNMTX0);

	GX_SetChanCtrl(GX_COLOR0A0, GX_DISABLE, GX_SRC_VTX, GX_SRC_REG, 0, GX_DF_NONE, GX_AF_NONE);
	GX_SetChanMatColor(GX_COLOR0A0, TempCol);

	for(c=0; text[c] != 0x00; c++) {

		tc = 4*(((u_char*)text)[c] - firstIndex);

		glBegin(GL_QUADS)

			GX_Position1x8(0);
			GX_TexCoord1x16(tc);

			GX_Position1x8(1);
			GX_TexCoord1x16(tc+1);

			GX_Position1x8(2);
			GX_TexCoord1x16(tc+2);

			GX_Position1x8(3);
			GX_TexCoord1x16(tc+3);

		glEnd();

		guMtxApplyTrans(TempMatrix, TempMatrix, cw+1, 0, 0);
		GX_LoadPosMtxImm(TempMatrix, GX_PNMTX0);

	}

	GX_LoadPosMtxImm(gdl::wii::ModelMtx, GX_PNMTX0);
	GX_SetChanCtrl(GX_COLOR0A0, GX_DISABLE, GX_SRC_VTX, GX_SRC_VTX, 0, GX_DF_NONE, GX_AF_NONE);
	*/
}
