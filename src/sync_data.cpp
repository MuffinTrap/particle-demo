// sync data implementation
#ifdef SYNC_PLAYER
#include "../rocket/track.h"
static track_key effect_active_keys[] = {{ 0, 4.000000, KEY_STEP}, { 24, 0.000000, KEY_STEP}, { 40, 1.000000, KEY_STEP}, { 56, 2.000000, KEY_STEP}, { 72, 3.000000, KEY_STEP}, { 88, 5.000000, KEY_STEP}, };
const sync_track effect_active = { "effect_active", effect_active_keys,6};
static track_key scene_rotX_keys[] = {{ 0, 0.000000, KEY_STEP}, { 720, 90.000000, KEY_STEP}, };
const sync_track scene_rotX = { "scene_rotX", scene_rotX_keys,2};
static track_key scene_rotY_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track scene_rotY = { "scene_rotY", scene_rotY_keys,1};
static track_key scene_rotZ_keys[] = {{ 0, 0.000000, KEY_STEP}, { 752, 0.000000, KEY_RAMP}, { 895, 1280.000000, KEY_STEP}, { 896, 53.000000, KEY_LINEAR}, { 1151, 360.000000, KEY_STEP}, };
const sync_track scene_rotZ = { "scene_rotZ", scene_rotZ_keys,5};
static track_key scene_X_keys[] = {{ 0, 0.000000, KEY_STEP}, { 168, 2.000000, KEY_STEP}, { 368, 0.300000, KEY_LINEAR}, { 607, -0.300000, KEY_STEP}, { 720, 0.000000, KEY_STEP}, };
const sync_track scene_X = { "scene_X", scene_X_keys,5};
static track_key scene_Y_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track scene_Y = { "scene_Y", scene_Y_keys,1};
static track_key scene_Z_keys[] = {{ 0, -0.600000, KEY_LINEAR}, { 80, -3.000000, KEY_STEP}, { 176, -3.000000, KEY_STEP}, { 192, -12.000000, KEY_STEP}, { 256, -3.000000, KEY_STEP}, { 368, -0.500000, KEY_STEP}, { 720, 0.000000, KEY_LINEAR}, { 752, -2.000000, KEY_STEP}, { 776, -7.000000, KEY_STEP}, { 893, -7.000000, KEY_LINEAR}, { 896, -1.000000, KEY_LINEAR}, { 1060, -1.000000, KEY_STEP}, };
const sync_track scene_Z = { "scene_Z", scene_Z_keys,12};
static track_key fade_A_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track fade_A = { "fade_A", fade_A_keys,1};
static track_key OrbitX_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track OrbitX = { "OrbitX", OrbitX_keys,1};
static track_key OrbitY_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track OrbitY = { "OrbitY", OrbitY_keys,1};
static track_key OrbitZ_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track OrbitZ = { "OrbitZ", OrbitZ_keys,1};
static track_key Repulsion_keys[] = {{ 0, 0.000000, KEY_LINEAR}, { 147, 12.000000, KEY_STEP}, { 368, 0.000000, KEY_STEP}, { 488, 12.000000, KEY_STEP}, { 608, 1.000000, KEY_STEP}, { 616, 0.000000, KEY_STEP}, { 672, 12.000000, KEY_STEP}, };
const sync_track Repulsion = { "Repulsion", Repulsion_keys,7};
static track_key RepulsionPower_keys[] = {{ 0, 0.000000, KEY_LINEAR}, { 147, 0.400000, KEY_STEP}, { 368, 0.000000, KEY_STEP}, { 488, 0.500000, KEY_STEP}, { 608, 0.100000, KEY_STEP}, { 616, 0.000000, KEY_STEP}, { 672, 0.400000, KEY_STEP}, };
const sync_track RepulsionPower = { "RepulsionPower", RepulsionPower_keys,7};
static track_key Gravity_keys[] = {{ 0, 8.000000, KEY_LINEAR}, { 168, 12.000000, KEY_STEP}, { 240, 32.000000, KEY_STEP}, { 368, 0.000000, KEY_STEP}, { 488, 12.000000, KEY_STEP}, { 608, 64.000000, KEY_STEP}, { 616, 0.000000, KEY_STEP}, { 672, 32.000000, KEY_STEP}, };
const sync_track Gravity = { "Gravity", Gravity_keys,8};
static track_key GravityPower_keys[] = {{ 0, 0.010000, KEY_LINEAR}, { 150, 0.100000, KEY_LINEAR}, { 157, 0.010000, KEY_STEP}, { 368, 0.000000, KEY_STEP}, { 488, 0.300000, KEY_STEP}, { 608, 0.400000, KEY_STEP}, { 616, 0.000000, KEY_STEP}, { 672, 0.200000, KEY_STEP}, };
const sync_track GravityPower = { "GravityPower", GravityPower_keys,8};
static track_key Friction_keys[] = {{ 0, 0.000000, KEY_LINEAR}, { 117, 0.400000, KEY_STEP}, { 240, 3.000000, KEY_STEP}, { 368, 32.000000, KEY_STEP}, { 608, 0.700000, KEY_STEP}, { 616, 1.000000, KEY_STEP}, { 672, 0.100000, KEY_LINEAR}, { 1226, 0.767000, KEY_STEP}, };
const sync_track Friction = { "Friction", Friction_keys,8};
static track_key EffectA_keys[] = {{ 0, -3.000000, KEY_LINEAR}, { 143, 3.000000, KEY_STEP}, { 144, 0.000000, KEY_STEP}, { 608, 0.500000, KEY_STEP}, { 696, 0.200000, KEY_LINEAR}, { 895, 0.300000, KEY_STEP}, { 896, 1.000000, KEY_STEP}, { 1151, 2.000000, KEY_STEP}, { 1152, 0.400000, KEY_STEP}, };
const sync_track EffectA = { "EffectA", EffectA_keys,9};
static track_key EffectB_keys[] = {{ 0, 0.000000, KEY_STEP}, { 608, 0.500000, KEY_STEP}, { 672, 0.600000, KEY_STEP}, };
const sync_track EffectB = { "EffectB", EffectB_keys,3};
static track_key EffectC_keys[] = {{ 0, 0.000000, KEY_STEP}, { 608, 0.500000, KEY_STEP}, };
const sync_track EffectC = { "EffectC", EffectC_keys,2};
static track_key EffectD_keys[] = {{ 0, 1.000000, KEY_STEP}, { 144, 0.500000, KEY_LINEAR}, { 152, 0.000000, KEY_STEP}, { 160, 1.000000, KEY_LINEAR}, { 168, 0.000000, KEY_STEP}, { 176, 0.300000, KEY_LINEAR}, { 184, 0.000000, KEY_STEP}, { 192, 0.700000, KEY_LINEAR}, { 200, 0.000000, KEY_STEP}, { 208, 0.300000, KEY_LINEAR}, { 216, 0.000000, KEY_STEP}, { 224, 0.400000, KEY_LINEAR}, { 232, 0.000000, KEY_STEP}, { 240, 0.600000, KEY_LINEAR}, { 248, 0.000000, KEY_STEP}, { 256, 0.300000, KEY_LINEAR}, { 264, 0.000000, KEY_STEP}, { 272, 0.700000, KEY_LINEAR}, { 280, 0.000000, KEY_STEP}, { 286, 0.300000, KEY_LINEAR}, { 288, 0.400000, KEY_LINEAR}, { 296, 0.000000, KEY_STEP}, { 300, 0.500000, KEY_LINEAR}, { 304, 0.300000, KEY_LINEAR}, { 312, 0.000000, KEY_STEP}, { 320, 1.000000, KEY_LINEAR}, { 328, 0.000000, KEY_STEP}, { 336, 0.300000, KEY_LINEAR}, { 344, 0.000000, KEY_STEP}, { 352, 0.300000, KEY_LINEAR}, { 360, 0.000000, KEY_STEP}, { 368, 1.000000, KEY_LINEAR}, { 376, 0.000000, KEY_STEP}, { 384, 1.000000, KEY_LINEAR}, { 392, 0.000000, KEY_STEP}, { 400, 1.000000, KEY_LINEAR}, { 408, 0.000000, KEY_STEP}, { 416, 1.000000, KEY_LINEAR}, { 424, 0.000000, KEY_STEP}, { 429, 0.400000, KEY_STEP}, { 430, 0.000000, KEY_STEP}, { 431, 1.000000, KEY_STEP}, { 432, 0.200000, KEY_STEP}, { 433, 0.000000, KEY_STEP}, { 434, 0.600000, KEY_STEP}, { 435, 3.000000, KEY_STEP}, { 436, 0.200000, KEY_STEP}, { 437, 0.000000, KEY_STEP}, { 438, 123.000000, KEY_STEP}, { 439, 0.000000, KEY_STEP}, { 440, 3.000000, KEY_STEP}, { 442, 0.000000, KEY_STEP}, { 444, 3.000000, KEY_STEP}, { 446, 0.000000, KEY_STEP}, { 448, 0.200000, KEY_STEP}, { 450, 0.000000, KEY_STEP}, { 452, 0.400000, KEY_STEP}, { 453, 3.000000, KEY_STEP}, { 454, 1.000000, KEY_STEP}, { 455, 0.000000, KEY_STEP}, { 456, 1.000000, KEY_STEP}, { 457, 0.000000, KEY_STEP}, { 458, 1.000000, KEY_STEP}, { 459, 0.000000, KEY_STEP}, { 460, 12.000000, KEY_STEP}, { 461, 0.000000, KEY_STEP}, { 462, 12.000000, KEY_STEP}, { 463, 0.000000, KEY_STEP}, { 464, 12.000000, KEY_STEP}, { 465, 0.000000, KEY_STEP}, { 466, 12.000000, KEY_STEP}, { 467, 0.000000, KEY_STEP}, { 469, 123.000000, KEY_STEP}, { 471, 0.000000, KEY_STEP}, { 473, 123.000000, KEY_STEP}, { 475, 0.000000, KEY_STEP}, { 477, 123.000000, KEY_STEP}, { 479, 0.000000, KEY_STEP}, { 481, 123.000000, KEY_STEP}, { 483, 0.000000, KEY_STEP}, { 485, 123.000000, KEY_LINEAR}, { 520, 1.000000, KEY_LINEAR}, { 607, 0.300000, KEY_STEP}, { 608, 0.000000, KEY_STEP}, { 896, 0.100000, KEY_STEP}, };
const sync_track EffectD = { "EffectD", EffectD_keys,85};
static track_key EffectE_keys[] = {{ 0, 1.000000, KEY_STEP}, { 144, 3.140000, KEY_LINEAR}, { 224, 0.000000, KEY_LINEAR}, { 336, 3.141500, KEY_LINEAR}, { 384, 0.000000, KEY_LINEAR}, { 447, 64.000000, KEY_LINEAR}, { 485, 6000.000000, KEY_LINEAR}, { 607, 0.000000, KEY_STEP}, { 896, 1.000000, KEY_STEP}, };
const sync_track EffectE = { "EffectE", EffectE_keys,9};
static track_key EffectF_keys[] = {{ 0, 0.000000, KEY_STEP}, { 144, 1.000000, KEY_STEP}, { 160, 3.000000, KEY_STEP}, { 176, 5.000000, KEY_STEP}, { 192, 1.000000, KEY_STEP}, { 208, 6.000000, KEY_STEP}, { 224, 1.000000, KEY_STEP}, { 240, 4.000000, KEY_STEP}, { 256, 7.000000, KEY_STEP}, { 288, 1.000000, KEY_STEP}, { 312, 4.000000, KEY_STEP}, { 896, 1.000000, KEY_STEP}, };
const sync_track EffectF = { "EffectF", EffectF_keys,12};
static track_key WindX_keys[] = {{ 0, 0.500000, KEY_STEP}, };
const sync_track WindX = { "WindX", WindX_keys,1};
static track_key WindY_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track WindY = { "WindY", WindY_keys,1};
static track_key WindZ_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track WindZ = { "WindZ", WindZ_keys,1};
static track_key ParticleCount_keys[] = {{ 0, 32.000000, KEY_STEP}, };
const sync_track ParticleCount = { "ParticleCount", ParticleCount_keys,1};
static track_key SdfType_keys[] = {{ 608, 1.000000, KEY_STEP}, { 672, 2.000000, KEY_STEP}, { 896, 1.000000, KEY_STEP}, };
const sync_track SdfType = { "SdfType", SdfType_keys,3};
static track_key title_rotY_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track title_rotY = { "title_rotY", title_rotY_keys,1};
static track_key radar_dots_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track radar_dots = { "radar_dots", radar_dots_keys,1};
static track_key radar_seed_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track radar_seed = { "radar_seed", radar_seed_keys,1};
static track_key radar_spread_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track radar_spread = { "radar_spread", radar_spread_keys,1};
static track_key radar_rarity_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track radar_rarity = { "radar_rarity", radar_rarity_keys,1};
static track_key tuner_pos_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track tuner_pos = { "tuner_pos", tuner_pos_keys,1};
static track_key tuner_names_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track tuner_names = { "tuner_names", tuner_names_keys,1};
static track_key tuner_row_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track tuner_row = { "tuner_row", tuner_row_keys,1};
static track_key tuner_page_keys[] = {{ 0, 0.000000, KEY_STEP}, };
const sync_track tuner_page = { "tuner_page", tuner_page_keys,1};
static track_key plotter_impact_keys[] = {{ 0, 0.015000, KEY_STEP}, };
const sync_track plotter_impact = { "plotter_impact", plotter_impact_keys,1};
static track_key plotter_decay_keys[] = {{ 0, 0.400000, KEY_STEP}, };
const sync_track plotter_decay = { "plotter_decay", plotter_decay_keys,1};
static track_key plotter_updateHz_keys[] = {{ 0, 4.000000, KEY_STEP}, };
const sync_track plotter_updateHz = { "plotter_updateHz", plotter_updateHz_keys,1};
static track_key credits_names_keys[] = {{ 0, 0.000000, KEY_STEP}, { 88, 1.000000, KEY_STEP}, };
const sync_track credits_names = { "credits_names", credits_names_keys,2};
#endif
 // SYNC_PLAYER