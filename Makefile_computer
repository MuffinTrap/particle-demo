BUILD_DIR = build
SRC_DIRS := . rocket

# Use find to gather all .cpp files in SRC_DIRS
src := $(shell find $(SRC_DIRS) -name '*.cpp')

MKSPRITE_FLAGS ?=

# Determine the operating system
ifeq ($(OS),Windows_NT)
	OS_TYPE = windows
else
	UNAME_S := $(shell uname -s)
	ifeq ($(UNAME_S),Darwin)
		OS_TYPE = macos
	else
		OS_TYPE = linux
	endif
endif

ifeq ($(OS_TYPE),windows)
	# Windows specific settings
	CC = g++
	CC_FLAGS = -Werror=unused-function
	LD_FLAGS = -L"/mingw64/include/GL/" -L"/mingw64/include/GL/" -lsndfile -lopenal -lfreeglut -lopengl32 -lglu32 -lws2_32 -Wl,--allow-multiple-definition
endif

ifeq ($(OS_TYPE),macos)
	# macOS specific settings
	CC = clang++
	CC_FLAGS = -I/opt/homebrew/Cellar/libsndfile/1.2.2/include -I/opt/homebrew/Cellar/openal-soft/1.23.1/include -Werror=unused-function
	LD_FLAGS = -L/opt/homebrew/Cellar/libsndfile/1.2.2/lib -L/opt/homebrew/Cellar/openal-soft/1.23.1/lib -lsndfile -lopenal -framework OpenGL -framework GLUT -Wno-unused-function -Wl,-flat_namespace -Wl,-undefined,dynamic_lookup
endif

ifeq ($(OS_TYPE),linux)
	# Linux specific settings
	CC = g++
	CC_FLAGS = -Werror=unused-function
	LD_FLAGS = -lsndfile -lopenal -lGL -lglut -Wno-unused-function -Wl,-z,muldefs
	GLUT_INCLUDE = -I/usr/include/GL/
endif

.PHONY: clean

gldemo: $(src:%.cpp=$(BUILD_DIR)/%.o)
	$(CC) -I/opt/homebrew/include -v -o $@ $^ $(CC_FLAGS) $(LD_FLAGS)

$(BUILD_DIR)/%.o: %.cpp | $(BUILD_DIR)
	@mkdir -p $(dir $@)
	$(CC) -c -I/opt/homebrew/include -o $@ $< $(CC_FLAGS) $(GLUT_INCLUDE)

$(BUILD_DIR):
	mkdir -p $@

clean:
	rm -rf $(BUILD_DIR) filesystem/ gldemo

-include $(wildcard $(BUILD_DIR)/*.d)

# Debugging step: print the source files
$(info Source files: $(src))
